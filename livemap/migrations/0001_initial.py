# Generated by Django 5.2.4 on 2025-07-12 08:04

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'cities',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name_plural': 'countries',
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parking_lot_address', models.CharField(max_length=200)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='livemap.city')),
            ],
            options={
                'verbose_name_plural': 'addresses',
            },
        ),
        migrations.AddField(
            model_name='city',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cities', to='livemap.country'),
        ),
        migrations.CreateModel(
            name='ParkingLot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_spots', models.PositiveIntegerField()),
                ('spots_for_disabled', models.PositiveIntegerField(blank=True, null=True)),
                ('is_private', models.IntegerField(choices=[(0, 'No'), (1, 'Yes')], default=0)),
                ('is_free', models.IntegerField(choices=[(0, 'No'), (1, 'Yes')], default=1)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9, null=True, validators=[django.core.validators.MinValueValidator(-90.0), django.core.validators.MaxValueValidator(90.0)])),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9, null=True, validators=[django.core.validators.MinValueValidator(-180.0), django.core.validators.MaxValueValidator(180.0)])),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parking_lots', related_query_name='parking_lot', to='livemap.address')),
            ],
        ),
        migrations.CreateModel(
            name='Occupancy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('occupied_spots', models.PositiveIntegerField(default=0)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('parking_lot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='occupancies', to='livemap.parkinglot')),
            ],
            options={
                'verbose_name_plural': 'occupancy',
                'get_latest_by': 'timestamp',
            },
        ),
        migrations.CreateModel(
            name='VideoStreamSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stream_source', models.URLField()),
                ('processing_rate', models.PositiveIntegerField(choices=[(5, '5 seconds'), (10, '10 seconds'), (30, '30 seconds'), (60, '60 seconds'), (120, '120 seconds'), (180, '180 seconds')], help_text='In seconds. The same for all video streams from the same parking lot.')),
                ('parking_zone', models.JSONField(blank=True, help_text='An array in a format [[[[int, int]], [[int, int]], ...]].', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('parking_lot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stream_sources', related_query_name='stream_source', to='livemap.parkinglot')),
            ],
        ),
    ]
